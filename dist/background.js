const l={phase:"idle",endsAt:null,cycle:0,running:!1};async function r(){return new Promise(e=>{chrome.storage.local.get(["pomodoroState"],t=>{e(t.pomodoroState||l)})})}function s(e){chrome.storage.local.set({pomodoroState:e})}function i(e){switch(e){case"work":return 1500*1e3;case"short-break":return 300*1e3;case"long-break":return 900*1e3;default:return 0}}async function u(){const e=await r();if(!(!e.running||!e.endsAt)&&Date.now()>=e.endsAt)if(e.phase==="work"){const t=e.cycle+1,n=t%4===0?"long-break":"short-break",o={phase:n,cycle:t,running:!0,endsAt:Date.now()+i(n)};s(o),c(n)}else{const t={...e,phase:"idle",running:!1,endsAt:null};s(t),c("idle")}}function c(e){const t=e==="work"?"Focus session":e==="idle"?"Session complete":"Break started",a=e==="work"?"Time to focus!":e==="idle"?"All done.":"Relax for a bit.";chrome.notifications.create({type:"basic",iconUrl:"icon128.png",title:t,message:a})}chrome.runtime.onMessage.addListener((e,t,a)=>{if(e.type==="POMODORO_COMMAND")return(async()=>{const n=await r();if(e.command==="START"&&e.phase){const o={phase:e.phase,running:!0,cycle:n.cycle,endsAt:Date.now()+i(e.phase)};s(o),c(e.phase),a(o)}else if(e.command==="STOP"){const o={...n,running:!1,phase:"idle",endsAt:null};s(o),a(o)}else e.command==="GET_STATE"&&a(n)})(),!0});setInterval(u,1e3);
